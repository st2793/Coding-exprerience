백준 https://www.acmicpc.net/problem/2775

파이썬 리스트 함수를 선언할때는 얕은함수 복사가 이루어지지 않도록 주의해야한다.

알고도 무의식중에 문제를 풀다보면 자꾸 삽질하게된다 ㅠㅠ

얕은복사 : print를 찍었을떄는 복사가 잘된듯 보이나, 바라보는 객체의 주소가 동일하다.  즉 특정 배열의 값을 변경한다면 동일한 주소를 바라보므로, 원본과 복사본의 값이 동시에 변경된다.
ex)
  A=[1,0,0]
  B=A
  B[2]=3
  => B의 두번째 배열만 변경한 것처럼 보이나, 실제로는 얕은복사이므로, A[2]=3으로 변경됨.


깊은복사 : 완전히 새로운 주소로 값을 복사한다. 따라서 복사본의 값을 바꿔도 원본에 영향을 끼치지 않는다.



* 이중배열 복사의 경우 주의해야한다. 
n=3, k=4일때 초깃값이 모두 영인 3X4의 배열을 만들고 싶다면,
board=[[0]*k]*n 이라고 생각하기 쉽다. 
이 또한 [~]*n에서 얕은복사가 일어난다. 즉, 모든행에 대한 같은 열에 해당하는 값은 동일한 주소를 바라본다. 
따라서 board[1][2]=3을 선언하더라도, 모든 2행2열 뿐만 아니라 1행2열, 3행2열의 값까지 3으로 변경된다.
=>
[0, 0, 3, 0]
[0, 0, 3, 0]
[0, 0, 3, 0]


따라서 항상 다중 차원의 배열을 만들때는 for문으로 복사가 이루어지지 않도록 해야함을 잊지말자!

정리)
1차원 리스트의 깊은복사는 다음과 같다.
A = [1, 0, 0]
B=[]
for x in A:
    B.append(x)
print(B)

2차원 리스트의 깊은복사는 다음과 같다.
n=3
k=4
board=[[0]*(k) for i in range(n)]
board[1][2]=3
for x in board:
    print(x)
=>
[0, 0, 0, 0]
[0, 0, 3, 0]
[0, 0, 0, 0]








  
  
