1. 내풀이 

from itertools import combinations
import sys
sys.stdin=open('a.txt','r')
n=int(input())
x=list(map(int,input().split()))
s=set()
for i in range(1,n+1):
    tmp=list(combinations(x,i))
    for y in tmp:
        s.add(sum(y))
for i in range(1,5000000):
    if not i in s:
        print(i)
        break


=> 그리디가 아니라 완전탐색과 다를바 없다. 


2. 정답풀이
화폐 단위를 기준으로 오름차순으로 정렬한 뒤, 오름차순에 의하여 1부터 차례대로 특정한 금액을 만들 수 있는지 확인하여 답을 구하는 문제다.
target의 값이 존재할 때 '1부터 target-1까지의 모든 금액을 만들 수 있다'는 개념을 적용하여 구현하면 됩니다.
왜냐하면 target의 값이 존재한다는 가정은 1+target 까지의 합은 가지고있는 조합으로 만들수 있기때문이다.
n = int(input()) 
data = list(map(int, input().split())) 
data.sort() 
target = 1 
for x in data: # 만들 수 없는 금액을 찾았을 때 반복 종료
  if target < x: 
   break 
  target += x # 만들 수 없는 금액 출력 print(target)

